//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
	public:

		int DivisibleByM(vector<int>nums, int m){
		    // Code here
		    int sum =0;
		    for(auto v:nums)
		        sum+=v;
		       
		    bool dp[2][sum+1];
		    for(int i=0;i<=nums.size();i++)
		    {
		        for(int j=0;j<=sum;j++)
		        {
		            if(j==0)
		                dp[i%2][j] = true;
		            else if(i==0)
		                dp[0][j] = false;
		            else if(nums[i-1] <= j)
		                dp[i%2][j] = dp[1 - i%2][j- nums[i-1]] || dp[1 - i%2][j];
		            else
		                dp[i%2][j] = dp[1 - i%2][j];
		        }
		    }
		    for(int i=m;i<=sum;i+=m)
		        if(dp[nums.size()%2][i])
		        {
		            return 1;
		        }
		  
		   return 0;
		}
};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)cin >> nums[i];
		Solution ob;
		int ans  = ob.DivisibleByM(nums, m);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
